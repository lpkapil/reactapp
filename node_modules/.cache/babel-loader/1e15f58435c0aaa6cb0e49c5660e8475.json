{"ast":null,"code":"var _localStorage$getItem, _localStorage$getItem2;\n\n/**\n * The reducer is a pure function that takes \n * the previous state and an action, and returns the next state. \n * It's called a reducer because it's the \n * type of function you would pass to Array. \n */\nconst initialState = {\n  login: (_localStorage$getItem = localStorage.getItem('login')) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : false,\n  token: (_localStorage$getItem2 = localStorage.getItem('token')) !== null && _localStorage$getItem2 !== void 0 ? _localStorage$getItem2 : null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return { ...state,\n        login: action.value,\n        token: action.token\n      };\n\n    case 'LOGOUT':\n      return { ...state,\n        login: action.value,\n        token: action.token\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/var/www/html/projects/reactapp/src/reducers/reducer.js"],"names":["initialState","login","localStorage","getItem","token","reducer","state","action","type","value"],"mappings":";;AAAA;;;;;;AAOA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,2BAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAF,yEAAmC,KADvB;AAEjBC,EAAAA,KAAK,4BAAEF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAF,2EAAmC;AAFvB,CAArB;;AAKA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,OAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHL,QAAAA,KAAK,EAAEM,MAAM,CAACE,KAFX;AAGHL,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAHX,OAAP;;AAKJ,SAAK,QAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHL,QAAAA,KAAK,EAAEM,MAAM,CAACE,KAFX;AAGHL,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAHX,OAAP;;AAKN;AACE,aAAOE,KAAP;AAdJ;AAgBH,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["/**\n * The reducer is a pure function that takes \n * the previous state and an action, and returns the next state. \n * It's called a reducer because it's the \n * type of function you would pass to Array. \n */\n\nconst initialState = {\n    login: localStorage.getItem('login') ?? false,\n    token: localStorage.getItem('token') ?? null \n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'LOGIN':\n            return {\n                ...state,\n                login: action.value,\n                token: action.token\n            }\n        case 'LOGOUT':\n            return {\n                ...state,\n                login: action.value,\n                token: action.token\n            }   \n      default:\n        return state\n    }\n}\n  \nexport default reducer;"]},"metadata":{},"sourceType":"module"}