{"ast":null,"code":"var _jsxFileName = \"/var/www/html/projects/reactapp/src/components/Register.js\";\nimport React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport axios from 'axios';\nimport qs from 'qs';\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onFinish = values => {\n      console.log('Success:', values);\n      axios.post('http://lumenauthapp.com/api/register', qs.stringify({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n        password_confirmation: values.password\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n        alert(res.data.message);\n        console.log(this.props.form);\n      }, error => {\n        alert(error.response.data.email);\n        console.log('In error');\n        console.log(error.response.data);\n      });\n    };\n\n    this.onFinishFailed = errorInfo => {\n      console.log('Failed:', errorInfo);\n    };\n\n    this.state = {\n      message: '',\n      showMessage: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      name: \"basic\",\n      initialValues: {\n        remember: true,\n        size: 'small'\n      },\n      onFinish: this.onFinish,\n      onFinishFailed: this.onFinishFailed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Name\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: 'Name is required.'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Email\",\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: 'Email is required.'\n      }, {\n        type: 'email',\n        message: 'Please enter a valid email.'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Password is required.'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"Register\")));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/var/www/html/projects/reactapp/src/components/Register.js"],"names":["React","Form","Input","Button","axios","qs","layout","labelCol","span","wrapperCol","tailLayout","offset","Register","Component","constructor","props","onFinish","values","console","log","post","stringify","name","email","password","password_confirmation","headers","then","res","data","alert","message","form","error","response","onFinishFailed","errorInfo","state","showMessage","render","remember","size","required","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport axios from 'axios';\nimport qs from 'qs';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nclass Register extends React.Component {\n  \n  constructor(props){  \n    super(props);\n    this.state = {  \n      message: '',\n      showMessage: false \n    } \n  }\n\n  onFinish = (values) => {\n    console.log('Success:', values);\n\n    axios.post(\n      'http://lumenauthapp.com/api/register', \n      qs.stringify({ \n        name: values.name,\n        email: values.email, \n        password: values.password,\n        password_confirmation: values.password\n      }),\n      {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n        \n        alert(res.data.message);\n        \n        console.log(this.props.form);\n\n      }, (error) => {\n        alert(error.response.data.email);\n        console.log('In error');\n        console.log(error.response.data);\n    });\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  render() {\n    return(\n      <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{\n        remember: true,\n        size: 'small',\n      }}\n      onFinish={this.onFinish}\n      onFinishFailed={this.onFinishFailed}\n    >\n    <Form.Item\n        label=\"Name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: 'Name is required.'\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Email\"\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: 'Email is required.'\n          },\n          {\n            type: 'email',\n            message: 'Please enter a valid email.'\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Password is required.'\n          },\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Form.Item>\n    </Form>\n    )\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}